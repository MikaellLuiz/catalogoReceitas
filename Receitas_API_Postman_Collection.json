{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "API Receitas Apocal√≠pticas - Completa",
		"description": "Collection completa para testar automaticamente todos os endpoints da API de Receitas com autentica√ß√£o JWT e valida√ß√µes.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "üìã Informa√ß√µes da API",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"API responde corretamente\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Resposta cont√©m informa√ß√µes da API\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('dados');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"response": []
		},
		{
			"name": "üîê AUTENTICA√á√ÉO",
			"item": [
				{
					"name": "Login Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@teste.com\",\n    \"senha\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login bem-sucedido\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token JWT recebido\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.dados).to.have.property('token');",
									"    pm.expect(jsonData.dados.token).to.be.a('string');",
									"    pm.environment.set('authToken', jsonData.dados.token);",
									"});",
									"",
									"pm.test(\"Dados do usu√°rio presentes\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.dados).to.have.property('usuario');",
									"    pm.expect(jsonData.dados.usuario).to.have.property('email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Registrar Usu√°rio",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"teste{{$timestamp}}@teste.com\",\n    \"senha\": \"123456\",\n    \"nome\": \"Usu√°rio Teste\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/registrar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"registrar"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registro bem-sucedido\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Resposta de sucesso\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Validar Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{authToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/validarToken",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"validarToken"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Token v√°lido\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token validado corretamente\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.dados).to.have.property('valido');",
									"    pm.expect(jsonData.dados.valido).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				}
			]
		},
		{
			"name": "üçΩÔ∏è RECEITAS",
			"item": [				{
					"name": "Listar receitas",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/receita",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Lista receitas com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Retorna array de receitas\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.dados).to.be.an('array');",
									"    if (jsonData.dados.length > 0) {",
									"        pm.environment.set('receitaId', jsonData.dados[0].id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},				{
					"name": "Buscar receita espec√≠fica",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/receita/{{receitaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita",
								"{{receitaId}}"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Busca receita com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Receita cont√©m dados obrigat√≥rios\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.dados).to.have.property('nome');",
									"    pm.expect(jsonData.dados).to.have.property('tempo_preparo');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Criar nova receita",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"Receita Teste {{$timestamp}}\",\n    \"descricao\": \"Receita criada durante teste automatizado\",\n    \"modo_preparo\": \"Instru√ß√µes de preparo da receita\",\n    \"tempo_preparo\": 30,\n    \"porcoes\": 4\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receita",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Receita criada com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ID da receita retornado\", function () {",
									"    const jsonData = pm.response.json();",
									"    if (jsonData.dados && jsonData.dados.id) {",
									"        pm.environment.set('novaReceitaId', jsonData.dados.id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Atualizar receita",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"Receita Atualizada {{$timestamp}}\",\n    \"descricao\": \"Receita atualizada durante teste\",\n    \"modo_preparo\": \"Instru√ß√µes atualizadas\",\n    \"tempo_preparo\": 45,\n    \"porcoes\": 6\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receita/{{novaReceitaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita",
								"{{novaReceitaId}}"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Receita atualizada com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirma√ß√£o de atualiza√ß√£o\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				}
			]
		},
		{
			"name": "ü•ï INGREDIENTES",
			"item": [				{
					"name": "Listar ingredientes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ingrediente",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingrediente"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Lista ingredientes com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Retorna array de ingredientes\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.dados).to.be.an('array');",
									"    if (jsonData.dados.length > 0) {",
									"        pm.environment.set('ingredienteId', jsonData.dados[0].id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},				{
					"name": "Buscar ingrediente espec√≠fico",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ingrediente/{{ingredienteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingrediente",
								"{{ingredienteId}}"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Busca ingrediente com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Ingrediente cont√©m dados obrigat√≥rios\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.dados).to.have.property('nome');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Criar novo ingrediente",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"Ingrediente Teste {{$timestamp}}\",\n    \"unidade_medida\": \"g\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ingrediente",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingrediente"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ingrediente criado com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ID do ingrediente retornado\", function () {",
									"    const jsonData = pm.response.json();",
									"    if (jsonData.dados && jsonData.dados.id) {",
									"        pm.environment.set('novoIngredienteId', jsonData.dados.id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Atualizar ingrediente",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"Ingrediente Atualizado {{$timestamp}}\",\n    \"unidade_medida\": \"kg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/ingrediente/{{novoIngredienteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingrediente",
								"{{novoIngredienteId}}"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ingrediente atualizado com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirma√ß√£o de atualiza√ß√£o\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				}
			]
		},
		{
			"name": "üîó RELACIONAMENTOS",
			"item": [
				{
					"name": "Listar ingredientes da receita",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/receita/{{receitaId}}/ingredientes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita",
								"{{receitaId}}",
								"ingredientes"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Lista ingredientes da receita\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Retorna array de ingredientes\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.dados).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Adicionar ingrediente √† receita",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ingrediente_id\": \"{{ingredienteId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receita/{{novaReceitaId}}/ingredientes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita",
								"{{novaReceitaId}}",
								"ingredientes"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ingrediente adicionado √† receita\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirma√ß√£o de relacionamento\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				}
			]
		},
		{
			"name": "üß™ TESTES DE VALIDA√á√ÉO",
			"item": [
				{
					"name": "Teste - Login inv√°lido",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"invalido@teste.com\",\n    \"senha\": \"senhaerrada\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login inv√°lido retorna erro\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Erro de credenciais inv√°lidas\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.not.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},				{
					"name": "Teste - Acesso sem token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/receita",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Acesso negado sem token\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Erro de autoriza√ß√£o\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.not.be.null;",
									"    pm.expect(jsonData.erro.codigo).to.equal(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},				{
					"name": "Teste - Receita inexistente",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/receita/99999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita",
								"99999"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Receita inexistente retorna 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Erro de recurso n√£o encontrado\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.not.be.null;",
									"    pm.expect(jsonData.erro.codigo).to.equal(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Teste - Receita com dados inv√°lidos",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"\",\n    \"tempo_preparo\": -10\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receita",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Dados inv√°lidos retornam erro\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Erro de valida√ß√£o\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.not.be.null;",
									"    pm.expect(jsonData.erro.codigo).to.equal(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},
				{
					"name": "Teste - Email j√° cadastrado",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@teste.com\",\n    \"senha\": \"123456\",\n    \"nome\": \"Teste Duplicado\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/registrar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"registrar"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Email duplicado retorna erro\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"Erro de conflito\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.not.be.null;",
									"    pm.expect(jsonData.erro.codigo).to.equal(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				}
			]
		},
		{
			"name": "üóëÔ∏è LIMPEZA (Opcional)",
			"item": [				{
					"name": "Deletar receita criada no teste",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/receita/{{novaReceitaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receita",
								"{{novaReceitaId}}"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Receita deletada com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirma√ß√£o de dele√ß√£o\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				},				{
					"name": "Deletar ingrediente criado no teste",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ingrediente/{{novoIngredienteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingrediente",
								"{{novoIngredienteId}}"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ingrediente deletado com sucesso\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirma√ß√£o de dele√ß√£o\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.erro).to.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Scripts que executam antes de cada requisi√ß√£o",
					"// Pode ser usado para configura√ß√µes globais"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Scripts que executam ap√≥s cada requisi√ß√£o",
					"// Pode ser usado para testes globais"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "receitaId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "ingredienteId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "novaReceitaId",
			"value": "",
			"type": "string"
		},
		{
			"key": "novoIngredienteId",
			"value": "",
			"type": "string"
		}
	]
}
